import pygame
import sys

pygame.init()

# Screen dimensions
WIDTH, HEIGHT = 800, 400
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Dinosaur Game")

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Frame rate
clock = pygame.time.Clock()
FPS = 60

# Dinosaur attributes
dino_width, dino_height = 50, 50
dino_x = 50
dino_y = HEIGHT - dino_height - 50  # Start on the ground
dino_velocity = 0  # For jumping

is_jumping = False
gravity = 0.8

# Ground
ground_y = HEIGHT - 50

# Obstacles (Cacti)
obstacle_width, obstacle_height = 30, 50
obstacle_x = WIDTH
obstacle_y = ground_y - obstacle_height
obstacle_speed = 5

score = 0

while True:
    screen.fill(WHITE)  # Clear screen

    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.KEYDOWN and not is_jumping:
            if event.key == pygame.K_SPACE:  # Jump
                is_jumping = True
                dino_velocity = -15

    # Dinosaur movement
    if is_jumping:
        dino_velocity += gravity
        dino_y += dino_velocity
        if dino_y >= HEIGHT - dino_height - 50:  # Hit the ground
            dino_y = HEIGHT - dino_height - 50
            is_jumping = False

    # Obstacle movement
    obstacle_x -= obstacle_speed
    if obstacle_x + obstacle_width < 0:  # Reset obstacle
        obstacle_x = WIDTH
        score += 1

    # Collision detection
    dino_rect = pygame.Rect(dino_x, dino_y, dino_width, dino_height)
    obstacle_rect = pygame.Rect(obstacle_x, obstacle_y, obstacle_width, obstacle_height)

    if dino_rect.colliderect(obstacle_rect):
        print("Game Over! Score:", score)
        pygame.quit()
        sys.exit()

    # Draw ground
    pygame.draw.rect(screen, BLACK, (0, ground_y, WIDTH, HEIGHT - ground_y))

    # Draw dinosaur
    pygame.draw.rect(screen, BLACK, (dino_x, dino_y, dino_width, dino_height))

    # Draw obstacle
    pygame.draw.rect(screen, BLACK, (obstacle_x, obstacle_y, obstacle_width, obstacle_height))

    # Draw score
    font = pygame.font.Font(None, 36)
    score_text = font.render(f"Score: {score}", True, BLACK)
    screen.blit(score_text, (10, 10))

    pygame.display.flip()  # Update display
    clock.tick(FPS)  # Control frame rate
